" set the runtime path to include Vundle and initialize
set path+=.,~/
set rtp+=~/.vim/bundle/Vundle.vim

function! M_Setup()
    hi CursorLine cterm=NONE ctermbg=234 ctermfg=darkgreen
    set cursorline
    set wildignore+=node_modules,.git,*.o,*.obj,vendor
    let &termencoding=&encoding
    filetype plugin indent on
    syntax on
    set fileencodings=utf-8,gbk
    au InsertLeave * write
    set expandtab 
    set mouse=a 
    set nu 
    set nocompatible
    set cindent
    set laststatus=2
    set incsearch 
    set hlsearch 
    set showmatch
    set matchtime=1
    set hidden "在未保存是 容许 切换缓冲区
    set clipboard+=unnamed
    set encoding=utf-8
    set termencoding=utf-8
    set formatoptions+=mM
    set textwidth=110
    set fencs=utf-8,gbk
    map ,dt a<C-R>=strftime('%Y-%m-%d %H:%M')<CR>
    let g:vim_markdown_folding_disabled=1
    no<c-k> <c-w>k
    no<c-j> <c-w>j 
    no<c-h> <c-w>h
    no<c-l> <c-w>l
    nnoremap tt :sh<cr>
    nnoremap nt :NERDTreeToggle<CR>
    nnoremap ct :CommandT<CR>
    nnoremap tl :TagbarToggle<CR>   "设置快捷键  
    nnoremap H :set cursorline!<CR>
    nnoremap r :source $MYVIMRC<CR>
    let mapleader = "-"
    nnoremap <leader>e :find $MYVIMRC<CR>
    nnoremap <leader>- :set paste!<CR>
    inoremap <esc> <nop>
    inoremap jj <esc>
    set t_Co=256

    let g:html_diff_one_file = 0
    let g:html_number_lines = 0
    let g:CommandTMaxFiles = 10000
    au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif 

    set autochdir
    set backspace=indent,eol,start
    let g:formatterpath = ['~/.vim/template/']
    " let g:syntastic_javascript_checkers = ['eslint']
    
    " let Vundle manage Vundle, required
    Plugin 'majutsushi/tagbar'
    Plugin 'wincent/command-t'
    Plugin 'scrooloose/nerdtree'
    Plugin 'plasticboy/vim-markdown'
    Plugin 'Chiel92/vim-autoformat'
    Plugin 'Raimondi/delimitMate'
    Plugin 'nathanaelkane/vim-indent-guides'
    Plugin 'tmux-plugins/vim-tmux'
    Plugin 'posva/vim-vue'
    Plugin 'tpope/vim-fugitive'
    Plugin 'vim-airline/vim-airline'
    Plugin 'vim-airline/vim-airline-themes'
    Plugin 'airblade/vim-gitgutter'
    Plugin 'scrooloose/syntastic'

    let g:airline_theme='aurora'
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#left_sep = ' '
    let g:airline#extensions#tabline#left_alt_sep = '>' 
    let g:airline#extensions#branch#enabled = 1

    "setting bellow can help your buffer tab show line number, help you to switch between all buffers"
    let g:airline#extensions#tabline#buffer_nr_show = 1
    let g:airline#extensions#tabline#fnamemod = ':t'

    let g:tagbar_width = 30       "设置宽度，默认为40  
    let g:tagbar_right = 1        "在右侧  
    let NERDTreeWinSize=35	"NerdTree 显示的宽度"
    let NERDChristmasTree=1

endfunction

function! RunRubyP()
    let ftp = &filetype
    if ftp=='ruby'
        exe ":!ruby ./%"
    endif
endfunction

function! DoOneFileMake()
    if(expand("%:p:h")!=getcwd())
        echohl WarningMsg | echo "Fail to make! This file is not in the current dir!"
    endif
    exec "w"
    call SetCompilation()
    exec "make"
    let Exe = expand("%:p:r")
    exe ":!./%<"
    "exec "copen"
endfunction

function! SetCompilation()
    if &filetype=='c'    
        set makeprg=gcc\ %\ -o\ %<
    elseif &filetype=='cpp'||'cc'
        set makeprg=g++\ %\ -o\ %<
    endif
endfunction

function! WithHobbies()
    " only set 2 space width for javascript, 4 for else.
    let ft = &filetype
    if ft =="javascript"
        set shiftwidth=2
        set tabstop=2
        set softtabstop=2
    else
        set shiftwidth=4
        set tabstop=4
        set softtabstop=4
    endif
endfunction

function! Comment() 
    let comment_indicator = '//'
    let wordUnderCursor = expand('<cword>')
    let line = getline('.')
    let commentline = line
    let nu = stridx(line, comment_indicator)
    if nu == 0
        let commentline = strpart(line, 2)
    else
        let commentline = '//' . line
    endif
    call setline('.', commentline)
endfunction


call vundle#begin()
call pathogen#infect()

call M_Setup()
nnoremap bb :call RunRubyP()<CR>
au BufEnter * call WithHobbies()
vnoremap E :call Comment()<CR>
nnoremap cc :call DoOneFileMake()<CR>

call vundle#end()
